---
import { getCollection } from 'astro:content';
import DefaultLayout from '../layouts/DefaultLayout.astro';
import FriendCard from '../components/FriendCard.astro';
import WorkCard from '../components/WorkCard.astro';

const friends = await getCollection('friends');
const works = await getCollection('works');
const latestWorks = works
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
  .slice(0, 4);
---

<DefaultLayout>
  <!-- 히어로 섹션 - 보라색 테마로 변경 및 시각적 효과 향상 -->
  <section class="relative py-24 overflow-hidden">
    <!-- 배경 그라데이션 -->
    <div class="absolute inset-0 bg-gradient-to-br from-purple-700 via-purple-600 to-indigo-700"></div>
    
    <!-- 배경 패턴 오버레이 -->
    <div class="absolute inset-0 opacity-20 bg-[url('/patterns/circuit-board.svg')] mix-blend-overlay"></div>
    
    <!-- 장식 요소 - 유동적 도형 -->
    <div class="absolute top-1/4 left-1/4 w-64 h-64 rounded-full bg-gradient-to-r from-blue-500 to-cyan-400 blur-3xl opacity-20 animate-blob"></div>
    <div class="absolute bottom-1/3 right-1/4 w-80 h-80 rounded-full bg-gradient-to-r from-purple-500 to-pink-400 blur-3xl opacity-20 animate-blob animation-delay-2000"></div>
    
    <div class="container relative z-10 mx-auto px-6 text-center">
      <h2 class="text-4xl md:text-5xl font-black text-white tracking-tight mb-6">
        <span class="bg-clip-text text-transparent bg-gradient-to-r from-white via-purple-100 to-blue-100">
          코없는놈과친구들
        </span>
      </h2>
      <p class="text-xl text-white/90 max-w-2xl mx-auto leading-relaxed">
        <span class="inline-block px-6 py-2 bg-white/15 backdrop-blur-md rounded-full border border-white/10 shadow-lg">
          코가 없는 놈과 그 친구들입니다.<br>
          (코 없는 놈이 누구인지는 모르겠네요)
        </span>
      </p>
    </div>

    <!-- 하단 장식 요소 -->
    <div class="absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-purple-400/50 via-white/60 to-indigo-400/50"></div>
  </section>

  <!-- 친구 리스트 섹션 - 디자인 향상 -->
  <section class="container mx-auto px-6 py-16">
    <h2 class="text-3xl font-bold mb-8 text-gray-800 border-l-4 border-purple-600 pl-4">
      <span class="bg-clip-text text-transparent bg-gradient-to-r from-purple-700 to-indigo-600">
        Friends
      </span>
    </h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
      {friends.map(f => (
        <FriendCard
          name={f.data.name}
          slug={f.slug}
          avatar={f.data.avatar}
        />
      ))}
    </div>
  </section>

  <!-- 최신 작품 하이라이트 섹션 - 보라색 테마 적용 및 시각적 개선 -->
  <section class="bg-gray-50 py-16 relative overflow-hidden">
    <!-- 배경 장식 요소 -->
    <div class="absolute top-20 left-10 w-96 h-96 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-full filter blur-3xl opacity-30 animate-blob animation-delay-4000"></div>
    <div class="absolute bottom-20 right-10 w-96 h-96 bg-gradient-to-br from-purple-100 to-blue-100 rounded-full filter blur-3xl opacity-20 animate-blob"></div>
    
    <div class="container relative z-10 mx-auto px-6">
      <h2 class="text-3xl font-bold mb-8 text-gray-800 border-l-4 border-purple-600 pl-4">
        <span class="bg-clip-text text-transparent bg-gradient-to-r from-purple-700 to-indigo-600">
          Latest Works
        </span>
      </h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        {latestWorks.map(w => (
          <WorkCard
            title={w.data.title}
            slug={w.slug}
            cover={w.data.cover}
          />
        ))}
      </div>
      <div class="mt-12 text-center">
        <a
          href="/works"
          class="inline-block px-6 py-3 bg-gradient-to-r from-purple-600 to-indigo-600 text-white rounded-lg hover:from-purple-700 hover:to-indigo-700 transition-all transform hover:scale-105 duration-300 shadow-lg hover:shadow-purple-500/20"
        >
          더 많은 작품 보기
        </a>
      </div>
    </div>
  </section>
</DefaultLayout>

<style>
/* 애니메이션 */
@keyframes blob {
  0% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
  100% {
    transform: translate(0px, 0px) scale(1);
  }
}

.animate-blob {
  animation: blob 15s infinite alternate;
}

.animation-delay-2000 {
  animation-delay: 2s;
}

.animation-delay-4000 {
  animation-delay: 4s;
}
</style>